#login-card
  .card
    .card-header
      %h1
        Trezor Login
    .card-body
      %p.text-muted.text-center
        Now you can use Trezor to store your XLM and Cryptomover supported tokens.
      .text-center
        THIS FEATURE IS HIGHLY EXPERIMENTAL.
      #result.text-center.alert.alert-danger.mt-1
      #trezor-login-form
        %form.mt-2{:role => "form"}
          .form-group
            %label Path:
            %input#path.form-control{value: "m/49'/10'/0'"}
            .text-muted
              Each unique path indicates single asset.
          .form-group
            %label Key:
            %input#key.form-control{value: "cryptomover", type: "text", disabled: true}/
          .form-group
            %label Cypher Value:
            %input.form-control{value: "fb00d59cd37c56d64ce6eba73af7a0aacdd25e06d18f98af16fc4a7b341b7136", type: "text", readonly: "readonly"}
          .text-center#trezor-btn
            %button.btn.btn-brown{onclick: "trezorLogin(); return false;"} Login
            = link_to "Cancel", root_path, class: "btn btn-default"
    #login-footer.card-footer.text-center
      = link_to "https://medium.com/cryptomover", target: "_blank" do
        %i.fab.fa-medium.fa-3x
      = link_to "https://t.me/cryptomover", target: "_blank" do
        %i.fab.fa-telegram.fa-3x
      = link_to "https://twitter.com/cryptomover", target: "_blank" do
        %i.fab.fa-twitter.fa-3x
      = link_to "https://github.com/cryptomover-code/stellar-rails", target: "_blank" do
        %i.fab.fa-github.fa-3x


          
%script{:src => "https://connect.trezor.io/4/connect.js"}

:javascript
  function trezorLogin() {
    var path = document.getElementById("path").value;
    var key = document.getElementById("key").value;

    if (path.length > 0 && key.length > 0) {
      $("#layout-alert").hide()
      trezorCipherKeyValue(path, key)
    } else {
      $("#layout-alert").show()
      $("#layout-alert").html("All values are required.")
    }
  }
  
  function trezorCipherKeyValue(path, key) {
    var value = 'fb00d59cd37c56d64ce6eba73af7a0aacdd25e06d18f98af16fc4a7b341b7136';
            
    var encrypt = true;
    var ask_on_encrypt = true;
    var ask_on_decrypt = false;
            
    var resultEl = document.getElementById("result");
            
    TrezorConnect.closeAfterFailure(false);
    TrezorConnect.cipherKeyValue(path, key, value, encrypt, ask_on_encrypt, ask_on_decrypt, function (response) {
      if (response.success) {
        $(resultEl).hide()
        console.log(response)
        document.location.href = '/trezor_wallet?value=' + response.value + '&key=' + key + '&cypher_value=' + value
      } else {
        console.log(response)
        $(resultEl).show()
        resultEl.appendChild(document.createTextNode("Error: " + response.error));
      }
      console.log(response)
      // document.getElementById("response").innerHTML = JSON.stringify(response, undefined, 2);
    });
  }
